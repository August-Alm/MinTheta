def Bool
  = θbool.λP.λt.λf.
    [(bool P [t : (P true)] [f : (P false)]) ⇓ (P bool)]

let true : Bool = λP.λt.λf.t

let false : Bool = λP.λt.λf.f

def Hom = λA.λB.θf.λx.[(f [x : A]) ⇓ B]

def Either 
  = λA.λB.θself.λP.λl.λr.
    [(self
      P
      [l : θl.λa.[(l [a : A]) ⇓ (P (left A B a))]]
      [r : θr.λb.[(r [b : B]) ⇓ (P (right A B b))]])
    ⇓ (P self)] 

let left : λA.λB.(Hom A (Either A B))
  = λA.λB.λa.λP.λl.λr.(l a)   

let right : λA.λB.(Hom B (Either A B))
  = λA.λB.λb.λP.λl.λr.(r b)
